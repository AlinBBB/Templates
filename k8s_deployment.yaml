#
#  Author: Hari Sekhon
#  Date: 2019-11-25 13:47:16 +0000 (Mon, 25 Nov 2019)
#
#  https://github.com/harisekhon/devops-perl-tools
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn
#  and optionally send me feedback to help improve or steer this or other code I publish
#
#  https://www.linkedin.com/in/harisekhon
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: NAME
  labels:
    app: APP
  annotations:
    # see also k8s_pod_disruption_budget.yaml
    cluster-autoscaler.kubernetes.io/safe-to-evict: True  # set to False for apps that don't like disruption
spec:
  # for persistent disks limited to 2 zones combined with GKE regional clusters
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/e2e-az-name
            operator: In
            values:
            - europe-west-1b
            - europe-west-1c
  selector:
    matchLabels:
      app: APP
      role: master
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: APP
        role: master
        tier: backend
    spec:
      progressDeadlineSeconds: 120
      terminationGracePeriodSeconds: 120  # how long between SIGTERM and killed - may want to set higher than default 30 secs eg. 1800 for Cassandra
      containers:
      - name: master
        image: k8s.gcr.io/APP:latest
        ports:
          - containerPort: 8080
        env:
          - name: HEAP_SIZE
            value: 1G
          - name: CASSANDRA_SEEDS
            value: cassandra-0.cassandra.default.svc.cluster.local
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP  # K8S API path
        readinessProbe:
          # http, tcp or exec
          httpGet:
            path: /healthz
            port: 8080
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          tcpSocket:
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 5
        resources:
          requests:
            # millicores - 1/1000 of a CPU / vCPU
            # 100m = 1/10th of CPU core
            cpu: 100m
            # literal MiB
            memory: 100Mi
        volumes:
          - name: APP-vol
            # GKE will automatically create the underlying disk for us using default storage provider's dynamic provisioner
            claimName: APP-dynamic-pvc
            readOnly: true
        volumeMounts:
          - name: APP-vol
            mountPath: /mnt/APP-vol
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]  # allow mlock to avoid paging ram to disk, for security or performance eg. NoSQL low latency datastores
        lifecycle:
          # execute this when sending TERM to container
          preStop:
            # http call or exec
            exec:
              command:
                - /bin/sh
                - -c
                - nodetool drain
      initContainers:
        - name: init-files
          image: alpine/git
          command: ['git', 'clone', 'https://github.com/harisekhon/devops-python-tools /data']
          volumeMounts:
            - name: app-vol
              mountPath: /data
        - name: init-mysql
          image: busybox
          command: ['sh', '-c', 'until nslookup mysql; do echo waiting for mysql to come up; sleep 1; done']
      VolumeClaimTemplates:
        - metadata:
            name: APP-data
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: fast
            resources:
              requests:
                storage: 1Gi
