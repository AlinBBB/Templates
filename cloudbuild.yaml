#
#  Author: Hari Sekhon
#  Date: 2020-02-11 12:53:33 +0000 (Tue, 11 Feb 2020)
#
#  https://github.com/harisekhon/templates
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn
#  and optionally send me feedback to help improve or steer this or other code I publish
#
#  https://www.linkedin.com/in/harisekhon
#

# ============================================================================ #
#                         G C P   C l o u d   B u i l d
# ============================================================================ #

# Reference:
#
# https://cloud.google.com/cloud-build/docs/build-config
#
# https://cloud.google.com/cloud-build/docs/build-debug-locally

# gcloud builds submit --config cloudbuild.yaml .

# tars $PWD to bucket called ${PROJECT_ID}_cloudbuild

# $PROJECT_ID is auto-populated by Cloud Build

# variables - can override these on the CLI:
# --substitutions=_IMAGE_NAME="myapp",_IMAGE_VERSION:"1.1"
substitutions:
  # XXX: set image and tag
  _IMAGE_NAME: myapp
  _IMAGE_VERSION: 1.0
  # GKE details
  #_CLOUDSDK_CONTAINER_CLUSTER: mycluster
  #_CLOUDSDK_COMPUTE_ZONE: europe-west1-b

timeout: 3660s

# push this image to GCR - doing it this way instead of docker push links the image artifact in GCP Console's Cloud Build UI
images:
- gcr.io/$PROJECT_ID/${_IMAGE_NAME}

steps:
# use Docker cloud builder to build image
- name: gcr.io/cloud-builders/docker
  # multiple tags (all tags get pushed to GCR implicitly via image declaration above)
  args:
    - build
    # use variable tags if triggered:
    # https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values
    - --tag=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
    - --tag=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}
    # use all cached layers where possible (will pull, kaniko cache is better as it's local0
    - --cache-from=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}
    - .
  # or use kaniko builder to cache
  #name: 'gcr.io/kaniko-project/executor:latest'
  #- --destination=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}
  #- --cache=true
  #- --cache-ttl=6h
  timeout: 3600s

# check the newly created image with a test command
- name: 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}'
  args:
    - test
  timeout: 60s

#- name: 'gcr.io/cloud-builders/docker'
#  args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}']

# CI/CD - deploy to GKE
#
#- name: 'gcr.io/cloud-builders/kubectl'
#  args: ['set', 'image', 'deployment/my-deployment', 'my-container=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_IMAGE_VERSION}']
#  env:
#  - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
#  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
#  timeout: 600s
