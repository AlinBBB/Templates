#
#  Author: Hari Sekhon
#  Date: 2020-02-23 23:30:14 +0000 (Sun, 23 Feb 2020)
#  Original: H1 2016 (Circle CI 1.x)
#
#  vim:ts=2:sts=2:sw=2:et
#
#  https://github.com/harisekhon/bash-tools
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
#
#  https://www.linkedin.com/in/harisekhon
#

# https://circleci.com/docs/2.0/configuration-reference

version: 2.1
jobs:
  build:
    # technically a docker image is a better choice than machine but we want to introduce some native environment variation between build systems in order to test the repo's build automation is robust
    machine:
      image: default
      #image: ubuntu-1604:201903-01
      # set to an actual docker image when running locally using circle_ci_job.sh
      # docker image must have git installed to do the checkout, hence why using harisekhon/ubuntu-dev instead of base ubuntu image
      #image: harisekhon/dev:ubuntu
    steps:
      - checkout
      - run: make init
      - run: make
      - run: make test
#      - save_cache: # Caches dependencies with a cache key
#      # template for an environment variable,
#      # see circleci.com/docs/2.0/caching/
#          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
#          paths:
#						- ~/.cache/pip
#						- ~/.cpanm
#						- ~/.gradle/caches
#						- ~/.gradle/wrapper
#						- ~/.ivy2/cache
#						- ~/.m2/repository
#						- ~/.m2/wrapper
#						- ~/.sbt
#						- ~/Library/Caches/pip
#						- ~/go/pkg/mod
#	build2:
#		docker:
#			image: harisekhon/dev:ubuntu
#    steps:
#      - restore_cache:
#         keys:
#           - m2-{{ checksum "pom.xml" }}
#           - m2- # used if checksum fails
#					 ...

# workflows:
#   version: 2
#   build_and_test: # name of your workflow
#     jobs:
#       - build1
#       - build2:
#           requires:
#            - build1 # wait for build1 job to complete successfully before starting
#            # see circleci.com/docs/2.0/workflows/ for more examples.
#       - build3:
#           requires:
#            - build1 # wait for build1 job to complete successfully before starting
#            # run build2 and build3 concurrently to save time.
